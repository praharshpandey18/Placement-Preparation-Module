class Solution{
    public:
    void solve(int i,int j,vector<vector<int>> &m, int n,vector<string>& ans,vector<vector<int>>& vis,string move,int di[],int dj[]){
        if(i==n-1 && j==n-1){
            ans.push_back(move);
            return;
        }
        string dir="DLRU";
        for(int k=0;k<4;k++){
            int nexti=i+di[k];
            int nextj=j+dj[k];
            if(nexti>=0 && nextj>=0 && nexti<n && nextj<n && !vis[nexti][nextj] && m[nexti][nextj]==1){
                vis[i][j]=1;
                solve(nexti,nextj,m,n,ans,vis,move+dir[k],di,dj);
                vis[i][j]=0;
            }
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<string> ans;
        vector<vector<int>> vis(n,vector<int> (n,0));
        int di[]={1,0,0,-1};
        int dj[]={0,-1,1,0};
       if(m[0][0]==1) solve(0,0,m,n,ans,vis,"",di,dj);
        return ans;
    }
};
